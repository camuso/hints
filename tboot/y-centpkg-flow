#! text

# This process may be a bit confusing, because you must use both rhpkg
# and centpkg.
#
# An outline of the prcedure follows, then notes on jira housekeeping.
#
# A full example of a package update for tboot is at the end.

# If there is no Jira ticket, you must create one. You cannot proceed
# without a Jira ticket.
#
# Start the update process.
# Clone the package and enter its directory
# MUST USE centpkg for y-stream!
 $ centpkg co <package-name> [dir]
 $ cd <dir>

Example:
 $ centpkg co tboot
 $ cd tboot

# Checkout the mainline. Then checkout the current release
# back
#
$ git branch -r
  origin/HEAD -> origin/c10s
  origin/c10s
  origin/c8s
  origin/c9s

$ git checkout -b 67949 origin/c9s

# For RHEL
 $ git checkout -b <branchname> origin/rhel-<maj-release>-[main | master]
 $ git checkout -b rhel-<maj-release>.<point-release>.0
 $ git push origin rhel-<maj-release>.<point-release>.0
# For Centos
 $ git checkout -b <branchname> origin/centos-gitlab/<stream>
 e.g.
 $ git checkout -b c9s origin/centos-gitlab/c9s

# Get your fork and checkout a branch to work on.
# If you already have a fork, skip this step.
# e.g.
 git remote -v
centos-gitlab	https://gitlab.com/redhat/centos-stream/rpms/tboot (fetch)
centos-gitlab	https://gitlab.com/redhat/centos-stream/rpms/tboot (push)
origin	ssh://tcamuso@pkgs.devel.redhat.com/rpms/tboot (fetch)
origin	ssh://tcamuso@pkgs.devel.redhat.com/rpms/tboot (push)
# shows that I alreday have a fork, so I can skip the next step.

 $ centpkg fork                     # see note [1] below
 $ git checkout -b <new-branchname> # see note [2] below

# Get the latest package from the developer's website.
# e.g.
 $ curl -L \
        https://sourceforge.net/projects/tboot/files/latest/download?source=files \
        -o tboot-1.11.9.tar.gz
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100   611  100   611    0     0   2923      0 --:--:-- --:--:-- --:--:--  2937
100   353  100   353    0     0    735      0 --:--:-- --:--:-- --:--:--   735
100  906k  100  906k    0     0   811k      0  0:00:01  0:00:01 --:--:-- 2209k
$

# Upload the package to the repo
 $ rhpkg upload tboot-1.11.9.tar.gz

# Make your edits, updates, rebase, etc.
# Update the .spec file to the appropriate NVR.
# - Update the changelog in the .spec file and be sure to include
#   Resolves: RHEL-<Jira-number>
#
# Test the build
# For some reason I don't yet understand, rhpkg local won't do this.
 $ centpkg local

# Make necessary changes until the build succeeds.
# Run tests on the resulting package from the build.
# If the build and tests succeed, commit and push your changes.
 $ git commit . -s
 $ git push <forkname> <new-branchname>

# The push will print a link to a new Merge Request to the screen.
# Open that link to the new merge request and make any changes you
# need to.
#
# Use 'git push -f' if you've already pushed and made new changes.
# In this case, the merge request should already exist.

# Wait for all the CI tests to succeed. If they don't, you need
# to determine the problem and fix it before proceeding.
#
# Once the CI tests have succeeded, and you have completed your
# own testing, you can press the 'Merge' button on the MR page.
#
# Wait for the merge to complete before proceeding.

# If you already have a centos-stream directory for your package,
# then cd into that directory.
#
# If you don't already have that directory, then clone the
# centos-stream for your package into a new directory.
 $ centpkg co <package-name> <new-centos-stream-directory>
 $ cd <new-centos-stream-directory>

# Checkout the centos-stream branch for the release you are
# updating.
 $ git checkout -b <new-branchname> origin/<centos-release>
 $ git pull

# See that the changes you pushed have propagated into the
# centos-stream. You may have to wait an hour or so, so find
# something else to do for a bit.
 $ git log

# Do a local build to see that all is well.
 $ centpkg switch-branch <centos-stream, e.g. c9s>
 $ centpkg local

# If the local build succeeds, and all tests have been completed,
# you can initiate a formal releaase build from the centos-stream
# directory. This will trigger both the CentOS Stream and RHEL builds.
 $ rhpkg --release rhel-9.5.0 build

# NOTES:
[1] This may fail the first time if you don't have an API token set up. Run
    `centpkg fork -h` for instructions on how to do so.
    You MUST use centpkg fork.

[2] Don't start the branch name with `rhel-`. There's a known bug in Gitlab:
    https://gitlab.com/gitlab-org/gitlab/-/issues/378945

[3] If you haven't logged into the `/redhat/centos` section of the Gitlab
    Web UI recently, you may stumble across ...

	https://gitlab.com/gitlab-org/gitlab/-/issues/391765

    ... which results in being provided the wrong URL to create the merge
    request. If that happens, you may need to browse to the dist-git repo
    directly and create the MR manually.

# JIRA Fields
#
"In Progress" throughout your development

Details->Type: <select from list, e.g. "Task">
Details->"Affects Versions": <select from list, e.g. "rhel-9.4.0">
Details->Component: <select from list or type, e.g. "tboot">
Details->"Fix Version": <select from list, e.g. "rhel-9.4.0">
Details->"Security Level": <select from list, e.g. "Red Hat Partner">
Details->People: Assignee: <you>
Details->People: Reporter: <whoever, e.g. you>
Details->People: Developer: <you>

"Field Tab"->"Fixed in Build": <NVR + el>
"Field Tab"->Products: Red Hat Enterprise Linux
"Field Tab"->"Epic Link": <select from list, e.g. "HW: 9.4 Common">
"Field Tab"->Keywords: <select from list, e.g. "Rebase">

People->"Pool Team": sst_arch_hw

Planning->"Dev Target Milestone": <DTM>
Planning->"Story Points": <3 to 8>

Development->"Preliminary Testing": Requested

EPM->Architecture: <select from list, e.g. "x86_64">

# END
#=========================================================================


# RHEL-9.5.0 tboot example
#
# Rebasing tboot to NVR tboot-1.11.3-1
# -----------------------------------------------------------------------
# Clone the package from rhel into a rhel directory
#
$ centpkg co tboot
$ cd tboot
$ git checkout rhel-9-main
$ git checkout -b rhel-9.4.0
$ git push origin rhel-9.4.0  	# <- note PREVIOUS RHEL
$ centpkg fork           	# get your fork
$ git checkout -b 34941  	# <- using JIRA number for branchname

# Get the latest tboot.
$ curl -L \
https://sourceforge.net/projects/tboot/files/latest/download?source=files \
-o tboot-1.11.3.tar.gz

# Upload the new package
$ centpkg upload tboot-1.11.3.tar.gz

# Make packaging changes, including updating the NVR and change log
# in the spec file.

# Test the build and make any required fixes
#
$ centpkg local

# Sucessful build will create packages in arch-specific sub-directories.
$ ll x86_64/
total 708
-rw-r--r--. 1 root root 287049 May  7 11:53 tboot-1.11.3-1.el9.x86_64.rpm
-rw-r--r--. 1 root root 307835 May  7 11:53 tboot-debuginfo-1.11.3-1.el9.x86_64.rpm
-rw-r--r--. 1 root root 119083 May  7 11:53 tboot-debugsource-1.11.3-1.el9.x86_64.rpm

# Install the new package on a live system and perform tboot functional and
# regression testing

# If all is good, commit and push the changes.
#
$ git commit -s .
$ git push tcamuso 34941

# This step should provide you with a URL to create a merge request into CentOS
# Stream[3]. That will trigger some CI checks as well. After all the CI tests
# succeed, and the MR is approved for merge, press the 'Merge' link on the
# Gitlab WebUI.
#
# After the MR is merged, 'git pull' to get the changes in to a test branch.
$ git checkout main
$ git pull
$ git checkout -b test
$ gitlog --oneline -n1
92a892f (HEAD -> 34941, tcamuso/34941) Rebase to upstream 1.11.3 and bump nvr to 1.11.3-1

# Make sure my fork is there.
$ git remote -v
origin	git+ssh://git@gitlab.com/redhat/centos-stream/rpms/tboot.git (fetch)
origin	git+ssh://git@gitlab.com/redhat/centos-stream/rpms/tboot.git (push)
tcamuso	git+ssh://git@gitlab.com/tcamuso/centos_rpms_tboot.git (fetch)
tcamuso	git+ssh://git@gitlab.com/tcamuso/centos_rpms_tboot.git (push)

# Get the names of the remote branches.
$ git branch -r
  origin/HEAD -> origin/c9s
  origin/c10s
  origin/c8s
  origin/c9s

# The following is all done in the cos directory created by cloning tboot.
# Test builds
centpkg local
centpkg --release rhel-9.5.0 build --scratch --srpm

# Formal release build
centpkg --release rhel-9.5.0 build

